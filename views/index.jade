extends layout

block scripts
	script(src="/static/js/codemirror.js")
	script(src="/static/js/codemirror-javascript.js")
	script
		var sampleCode = $('#code').text()
		if (localStorage && 'code' in localStorage) {
			sampleCode = localStorage['code']
		}

		var myCodeMirror = CodeMirror(function(element) {
			textArea = $('#code')[0]
			textArea.parentNode.replaceChild(element, textArea);
		}, {"value": sampleCode, "lineNumbers": true});

block styles
	link(rel="stylesheet", type="text/css", href="/static/css/codemirror.css")

block body
	.container
		.row
			.span12
				.hero-unit
					h1 JS Competition
					p.
						This is a sample competition to show the JSCompetition framework. The competition is based on the AI competition hosted by Scribd in 2012.

		.row
			.span8
				h2 1. Enter the competition
				#editor
					textarea#code
						!{sample_code}
					.controls
						button.btn.btn-primary.btn-large
							i.icon-play.icon-white
							|  Test Your Entry
			#instructions.span4
				h2 Instructions
				ol
					li.
						Modify the sample AI on the left to create an entry.
					li
						| Press 
						button.btn.btn-primary.btn-small
							i.icon-play.icon-white
							|  Test Your Entry
						|  to see how it performs.
					li.
						If you're happy with it, submit it to the live competition. Otherwise, keep iterating step 1 &amp; 2 until you're ready.
		.row
			.span12
				h2 2. Games
				#games.accordion
					.accordion-group
						.accordion-heading
							a.accordion-toggle(data-toggle="collapse",data-parent="#games",href="#game1")
								span Game 1
								span.result Win
						#game1.accordion-body.collapse
							.accordion-inner.
								Test something something
					.accordion-group
						.accordion-heading
							a.accordion-toggle(data-toggle="collapse",data-parent="#games",href="#game2")
								span Game 2
								span.result Lose
						#game2.accordion-body.collapse
							.accordion-inner.
								Test something something
		.row
			.span12
				h2 3. Confirm your entry
				.alert.
					Don't worry. You can still come back and modify your entry after you've submitted it.
				form.well
					label Email Address
						input(type="email")
					label Entry name
						input(type="text")

					button.btn(type="submit") Submit Entry